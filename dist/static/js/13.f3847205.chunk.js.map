{"version":3,"sources":["modules/DailyPrayer.js","lib/datetime.js"],"names":["defaultMaterialTheme","createMuiTheme","palette","primary","main","DailyPrayer","props","id","isNullOrUndefined","location","state","useState","prayers","setPrayers","Date","date","setDate","isLoading","setIsLoading","useEffect","fetchPageData","fetchBy","a","FetchAPI","page","getDate","result","data","console","log","class","className","theme","utils","DateFnsUtils","autoOk","variant","value","onChange","length","map","prayer","style","maxWidth","fontSize","title","src","FTP_URL","image_name","content","color","fontWeight","for","type","required","name","cols","rows","moment","require","format","getDateInDDMMYYYY"],"mappings":"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","file":"static/js/13.f3847205.chunk.js","sourcesContent":["import React, {Fragment, useEffect, useState} from 'react';\r\nimport {isNullOrUndefined} from 'util';\r\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\n\r\n// Components\r\nimport {getDate} from '../lib/datetime.js';\r\nimport Loader from '../common/FallbackLoader.js';\r\n\r\n//API\r\nimport FetchAPI from '../api/APIs.js';\r\nimport { FTP_URL } from '../api/config/Constants.js';\r\n\r\nconst defaultMaterialTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#786587',    \r\n    },\r\n  },  \r\n});\r\n\r\nexport default function DailyPrayer(props) {\r\n  let id = (isNullOrUndefined(props.location.state) || props.location.state === \"\") \r\n           ? 0\r\n           : (props.location.state);\r\n\r\n  const [prayers, setPrayers] = useState([]);\r\n  const [date, setDate] = useState(new Date());\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchPageData('Id', date);\r\n  },[]);\r\n\r\n  const fetchPageData = async (fetchBy, date) => {\r\n    setIsLoading(true);\r\n    try{\r\n      const result = await FetchAPI.fetchPageData({\r\n        page: 'DailyPrayer',\r\n        id : id,\r\n        fetchBy : fetchBy,\r\n        date: getDate(date),\r\n      });\r\n      setPrayers(result.data);\r\n      setIsLoading(false);\r\n      if(!isNullOrUndefined(result.data[0].date) || result.data[0].date !== \"\"){\r\n        setDate(getDate(result.data[0].date));\r\n      }\r\n    }catch(e){\r\n      console.log('Error...', e);\r\n    }\r\n  }\r\n\r\n  const handleDate = (date) => {\r\n    setDate(date);\r\n    fetchPageData('Date', date);\r\n  }\r\n \r\n  return(\r\n    <Fragment>\r\n    <section class=\"site-section\">\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-4\">\r\n            <div className=\"calendar-box\">\r\n              <div class=\"block-16\">\r\n                <div class=\"heading\">\r\n                  <p className=\"calendar-title\">Prayer calendar</p>                  \r\n                </div>\r\n                <figure>\r\n                <ThemeProvider theme={defaultMaterialTheme}>\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <DatePicker \r\n                      autoOk\r\n                      variant=\"static\"\r\n                      value={date}\r\n                      onChange={handleDate}\r\n                    />\r\n                  </MuiPickersUtilsProvider>\r\n                </ThemeProvider>\r\n                </figure>\r\n              </div>\r\n            </div>\r\n          </div> \r\n          <div class=\"col-md-8\">\r\n            <blockquote>\r\n              {(prayers.length > 0 ? prayers : []).map((prayer) => {\r\n                return(\r\n                  <Fragment>\r\n                    <div class=\"col-md-12\">\r\n                      <div class=\"block-15\">\r\n                        <div class=\"heading\" style={{maxWidth: 'fit-content'}}>\r\n                          <h2 style={{ fontSize: '35px'}}>{prayer.title}</h2>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                      <div class=\"block-16\">\r\n                        <figure>\r\n                          <img src={FTP_URL + '/api/images?path=Prayer/' + prayer.image_name}  class=\"img-fluid img-shadow\" />\r\n                        </figure>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                      <div class=\"block-15\">\r\n                        <div>\r\n                          <p class=\"mb-4\"> {prayer.content} </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"heading\">\r\n                  <h4 style={{color: '#6c5b7b', fontWeight: 'bold'}}>Share your Experience </h4>\r\n                </div>\r\n                      <div class=\"col-md-12 pr-md-5\">\r\n                          <form >\r\n                            <div class=\"row\">\r\n                              <div class=\"col-md-4 form-group\">\r\n                                <label for=\"name\">Name</label>\r\n                                <input type=\"text\" id=\"name\" class=\"form-control py-2\" required/>\r\n                              </div>\r\n                              <div class=\"col-md-4 form-group\">\r\n                                <label for=\"phone\">Phone</label>\r\n                                <input type=\"number\" id=\"phone\" class=\"form-control py-2\" required/>\r\n                              </div>\r\n                              <div class=\"col-md-4 form-group\">\r\n                                <label for=\"email\">Email</label>\r\n                                <input type=\"email\" id=\"email\" class=\"form-control py-2\" required/>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                              <div class=\"col-md-12 form-group\">\r\n                                <label for=\"message\">Write Message</label>\r\n                                <textarea name=\"message\" id=\"message\" class=\"form-control py-2\" cols=\"30\" rows=\"8\" required></textarea>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                              <div class=\"col-md-6 form-group\">\r\n                              <input type=\"submit\" value=\"Send Message\" class=\"btn btn-primary py-3 px-5\"/>\r\n                            </div>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n\r\n\r\n\r\n                    <hr />\r\n                  </Fragment>\r\n                )\r\n              })}              \r\n            </blockquote>\r\n          </div>\r\n        </div>       \r\n      </div>\r\n    </section>  \r\n    {isLoading === true ? <Loader /> : null}\r\n  </Fragment>\r\n  )\r\n}","const moment = require('moment');\r\n\r\nexport function getDate(date) {\r\n  return moment(date).format(\"YYYY-MM-DD\");\r\n}\r\n\r\nfunction getCurrentDateDBFormat() {\r\n  return moment().format(\"YYYY-MM-DD\")\r\n}\r\n\r\n\r\nfunction getCurrentDate() {\r\n  return moment().format(\"MM/DD/YYYY\")\r\n}\r\n\r\n\r\nexport function getCurrentDateInYYYYMMDD() {\r\n  return moment().format(\"YYYY/MM/DD\")\r\n}\r\n\r\nexport function getDateInDDMMYYYY(date) {\r\n  return moment(date).format(\"DD-MM-YYYY\")\r\n}\r\n\r\nfunction getCurrentDateDDMMYYYY() {\r\n  return moment().format(\"DD-MM-YYYY\")\r\n}\r\n\r\nfunction getTimeinDBFormat(date) {\r\n  return moment(date).format(\"HH:mm:ss\")\r\n}\r\n\r\nfunction getTime(date) {\r\n  return moment(date).format(\"HH:mm\")\r\n}\r\n\r\nfunction convertDateInUTC(date) {  \r\n  return moment.utc(date);  \r\n}\r\n\r\nfunction setDBDateFormat(date){\r\n  let day = date.split('-')[0];\r\n  let month = date.split('-')[1];\r\n  let year = date.split('-')[2];\r\n  return (year + '-' + month + '-' + day) ;\r\n}\r\n\r\nfunction isBirthDate(date){\r\n  const custDate = new Date(date);\r\n  const currDate = new Date();\r\n  return (custDate.getDate() === currDate.getDate() && custDate.getMonth() === currDate.getMonth());\r\n}\r\n\r\n\r\nfunction addOneDay(date){\r\n  return moment(date).add(1, 'days').format(\"YYYY-MM-DD\");  \r\n}\r\n\r\nfunction subtractOneDay(date){\r\n  return moment(date).subtract(1, 'days').format(\"YYYY-MM-DD\");  \r\n}\r\n\r\nfunction checkPastDate(date) {  \r\n  return moment(date).format(\"YYYY-MM-DD\") > getDate();\r\n}\r\n\r\nfunction checkFutureDate(date) {\r\n  return moment(date).format(\"YYYY-MM-DD\") < getDate();\r\n}\r\n\r\nfunction isSameDate(payment_date, settlement_date) {\r\n  console.log(payment_date === settlement_date, payment_date, settlement_date)\r\n  console.log(moment(payment_date) > moment(settlement_date), moment(payment_date) < moment(settlement_date))\r\n  return payment_date === settlement_date;\r\n}\r\n\r\nfunction checkOverDue(payment_date, settlement_date) {  \r\n  return moment(payment_date).format(\"YYYY-MM-DD\") > moment(settlement_date).format(\"YYYY-MM-DD\");\r\n}\r\n\r\nfunction escapeSunday(date){\r\n  return moment(date).format(\"dddd\") == \"Sunday\";\r\n}\r\n"],"sourceRoot":""}